# Nome do Workflow
name: GitHub Actions - CI Robot Framework

# Nome para a execução
run-name: Running - Web testing - ${{ github.event_name }}
on: 
  push:
    branches:
    - master
  workflow_dispatch:
    inputs:
      tags:
        description: Selecione a tag
        type: choice
        options:
        - CT
        - CT1
        - CT2
        default: 'CT'
        required: true
      browser:
        description: Selecione o Browser
        type: choice
        options:
        - chromium
        - firefox
        - webkit
        default: 'chromium'
        required: true
# Conjunto de steps
jobs:

  on-push-test-page-object-web-testing:
    if: ${{ github.event_name == 'push' }}
    # máquina que será gerada
    runs-on: ubuntu-20.04
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        tags: [CT1, CT2]
    steps:
      - name: checkout
        uses: actions/checkout@v4
      
      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Node.js 19.1
        uses: actions/setup-node@v3
        with:
          node-version: '19.1'

      - name: Install Requirements
        run: |
            python -m pip install --upgrade pip
            pip install -U -r requirements.txt
            sudo npm install @playwright/test
            sudo npx playwright install-deps
            rfbrowser init

      - name: Running testes
        run: |
          robot -d ./results -v HEADLESS:true -v BROWSER:${{matrix.browser}} -i ${{matrix.tags}} tests/teste_com_page_object.robot
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: results-${{matrix.browser}}
          path: ./results
          if-no-files-found: ignore
          retention-days: 2

      - name: Download test results
        if: always()
        uses: actions/download-artifact@v1
        with:
          name: results-${{matrix.browser}}

      # - name: Send report
      #   if: always()
      #   uses: joonvena/robotframework-reporter-action@v2.4
      #   with:
      #     report_path: results-${{matrix.browser}}
      #     gh_access_token: ${{ secrets.GITHUB_TOKEN }}
      #     show_passed_tests: false

  on-dispatch-test-page-object-web-testing:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    # máquina que será gerada
    runs-on: ubuntu-20.04
    permissions: write-all
    steps:
      - name: checkout
        uses: actions/checkout@v4
      
      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Node.js 19.1
        uses: actions/setup-node@v3
        with:
          node-version: '19.1'

      - name: Install Requirements
        run: |
            python -m pip install --upgrade pip
            pip install -U -r requirements.txt
            sudo npm install @playwright/test
            sudo npx playwright install-deps
            rfbrowser init

      - name: Running testes
        run: |
          robot -d ./results -v HEADLESS:true -v BROWSER:${{inputs.browser}} -i ${{inputs.tags}} tests/teste_com_page_object.robot
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: results-chromium
          path: ./results
          if-no-files-found: ignore
          retention-days: 2

      - name: Download test results
        if: always()
        uses: actions/download-artifact@v1
        with:
          name: results-chromium

      # - name: Send report
      #   if: always()
      #   uses: joonvena/robotframework-reporter-action@v2.4
      #   with:
      #     report_path: results-chromium
      #     gh_access_token: ${{ secrets.GITHUB_TOKEN }}
      #     show_passed_tests: false

                